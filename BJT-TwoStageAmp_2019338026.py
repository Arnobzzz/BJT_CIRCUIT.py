import schemdraw
import schemdraw.elements as elm
with schemdraw.Drawing() as d:
    d.config(inches_per_unit=.5,unit=3)
    d+=(Vgg:=elm.Ground())
    d+=(Vg:=elm.SourceSin().up().at(Vgg.start).label('$V_g$'))
    d+=(Rg:=elm.Resistor().right().label('$R_G$',loc='bot'))
    d+=(C1:=elm.Capacitor2().right(d.unit/2).dot())
    d+=(R1:=elm.Resistor().up().label('$R_1$',loc='bot'))
    d+=(Ln:=elm.Line().down(d.unit/4).at(C1.end).dot())
    d+=(R2:=elm.Resistor().down(d.unit/1.3).label('$R_2$',loc='bot').at(Ln.end))
    d+=(R2g:=elm.Ground().at(R2.end))
    d+=(Ln2:=elm.Line().right().at(Ln.end))
    d+=(Q1:=elm.BjtNpn(circle=True).at(Ln2.end).label('$Q_1$',loc='right'))
    d+=(Ln3:=elm.Line().right(d.unit*1.25).at(R1.end).dot())
    d+=(Rc:=elm.Resistor().down(3/4*d.unit).label('$R_C$',loc='bot').at(Ln3.end).dot())
    d+=(Ln4:=elm.Line().down(1/4*d.unit).to(Q1.collector))
    d+=(Ln5:=elm.Line().down(d.unit/7).at(Q1.emitter).dot())
    d+=(Re1:=elm.Resistor().down(d.unit*0.4).label('$R_E$',loc='bot').at(Ln5.end))
    d+=(REg:=elm.Ground())
    d+=(Ln6:=elm.Line().right(d.unit/2).at(Ln5.end))
    d+=(C2:=elm.Capacitor2().down(d.unit*0.4).at(Ln6.end))
    d+=(C2g:=elm.Ground())
    d+=(Ln7:=elm.Line().right().at(Rc.start).dot())
    d+=(C3:=elm.Capacitor2().right().at(Rc.end).dot())
    d+=(R11:=elm.Resistor().down(3/5*d.unit).at(Ln7.end).label('$R_1$',loc='bot'))
    d+=(Ln8:=elm.Line().down(d.unit*0.5).at(R11.end).dot())
    d+=(R22:=elm.Resistor().down(d.unit*0.92).at(Ln8.end).label('$R_2$',loc='bot'))
    d+=(R22g:=elm.Ground())
    d+=(Ln9:=elm.Line().right(d.unit*0.9).at(Ln8.end))
    d+=(Q2:=elm.BjtNpn(circle=True).right().label('$Q_2$',loc='right'))
    d+=(Ln10:=elm.Line().up(1/6*d.unit).at(Q2.collector).dot())
    d+=(Rcc:=elm.Resistor().up(d.unit*0.7).label("$R_C$",loc="bot").dot())
    d+=(Ln11:=elm.Line().right().at(R1.end))
    d+=(Ln12:=elm.Line().right(0.6*d.unit).at(Rcc.end).label("$+V_{CC}$",loc="right").dot(open=True))
    d+=(Ln13:=elm.Line().down(d.unit/6).at(Q2.emitter).dot())
    d+=(Re2:=elm.Resistor().down(d.unit/2).at(Ln13.end).label('$R_E$',loc='bot'))
    d+=(Re2g:=elm.Ground())
    d+=(Ln14:=elm.Line().right(d.unit/2).at(Ln13.end))
    d+=(C4:=elm.Capacitor2().down(d.unit*0.5).at(Ln14.end))
    d+=(Re2g:=elm.Ground())
    d+=(Ln15:=elm.Line().right(d.unit*1.2).at(R11.start))
    d+=(Ln16:=elm.Capacitor2().at(Ln10.end).right())
    d+=(Ln17:=elm.Resistor().down(d.unit*1.3).at(Ln16.end).label('$R_L$'))
    d+=(Re3g:=elm.Ground())
    #d.draw()
    d.save('VoltageDividerBias.svg')
    d.save('VoltageDividerBias.pdf')